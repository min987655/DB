SELECT HIREDATE
FROM EMP
WHERE hiredate = '80/12/17';

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY/MM/DD';

SELECT *
FROM EMP;

-- BETWEEN
SELECT *
FROM EMP
WHERE SAL >= 1500 AND SAL <= 2000;

SELECT *
FROM EMP
WHERE SAL BETWEEN 1500 AND 2000;

-- LIKE 비슷한 문장을 찾을 수 있음(검색엔진에서 사용)
SELECT *
FROM EMP
WHERE ENAME LIKE '%N';

SELECT *
FROM EMP
WHERE ENAME LIKE 'A%';

SELECT *
FROM EMP
WHERE ENAME LIKE 'A%N';

SELECT *
FROM EMP
WHERE ENAME LIKE '%N%';

-- NULL : 없다라는 데이터 자체가 들어가 있음.
SELECT *
FROM EMP
WHERE COMM IS NOT NULL;

SELECT *
FROM EMP
WHERE COMM IS NULL;

-- 사원들중에 보너스가 500보다 작은 사람 !
SELECT *
FROM EMP
WHERE COMM < 500;

SELECT NVL(NULL,0), NVL(100,0)
FROM DUAL;

SELECT *
FROM EMP
WHERE NVL(COMM,0)<500;

SELECT ENAME, SAL, NVL(COMM,0)
FROM EMP
WHERE NVL(COMM,0)<500;

-- 정렬하여 출력하기 : ORDER BY
SELECT *
FROM EMP
WHERE SAL >1000
ORDER BY SAL ASC;

SELECT *
FROM EMP
WHERE SAL >1000
ORDER BY SAL DESC;
-- ORDER BY 이중 사용
SELECT ENAME, SAL, COMM
FROM EMP
ORDER BY SAL DESC, COMM DESC;
-- 번호 넘버링하여 사용
SELECT ENAME, SUBSTR(SAL,1,1)
FROM EMP
ORDER BY 2 DESC;

-- 숫자 관련 함수들
-- 1840경
SELECT POWER(2,65)
FROM DUAL;

SELECT MOD(121, 10), CEIL(123.45), FLOOR(123.45)
FROM DUAL;

SELECT TRUNC(987.654, 2) "TRUNC1",
       TRUNC(987.654, 0) "TRUNC2",
       TRUNC(987.654, -1) "TRUNC3"
FROM DUAL;

-- SYSDATE : 오늘 날짜를 출력하는 키워드
SELECT SYSDATE
FROM DUAL;


-- DECODE() 함수(NULL자리 생략시 NULL이 출력 됨)
SELECT DECODE('LOVE', 'LVE', '참', '거짓')
FROM DUAL;

SELECT * FROM professor;

-- 114p 유형 1
SELECT DEPTNO, NAME, DECODE(DEPTNO, 101, 'Computer Engineerring', ' ')
FROM professor;
-- 115p 유형 2
SELECT DEPTNO, NAME, DECODE(deptno, 101, 'Computer Engineerring', 'ETC')
FROM professor;
-- 116p 유형 3
SELECT deptno, name, DECODE(deptno, 101, 'Computer Engineerring', 102, 'Multimedia Engineering', 103, 'Software Engineering', 'ECT')
FROM professor;
-- 117p 유형 4
SELECT deptno, name, DECODE(deptno,101, DECODE(name, '박승곤', 'BEST!'))
FROM professor;
-- 118p 유형 5
SELECT deptno, name, DECODE(deptno, 101, DECODE(name, '박승곤', 'BEST!', 'GOOD'),' ')
FROM professor;
-- 119p 유형 6
SELECT deptno, name, DECODE(deptno, 101, DECODE(name, '박승곤', 'BEST', 'GOOD'), 'N/A')
FROM professor;
-- 120p 퀴즈
SELECT name, jumin, DECODE(SUBSTR(jumin,7,1),1,'MAN', 'WOMAN') 
FROM STUDENT;
-- 120p 퀴즈
SELECT deptno1, name, tel, DECODE(deptno1,101, DECODE(SUBSTR(tel,1,INSTR(tel,')')-1),'02', 'SEOUL', '031', 'GYEONGGI','051', 'BUSAN','052', 'ULSAN','055', 'GYEONGNAM'))  
FROM STUDENT
WHERE deptno1 =101;

-- https://blog.naver.com/codingspecialist/221056527127
SELECT *
FROM EMP;

SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE DEPTNO=10;

SELECT ENAME, HIREDATE, DEPTNO
FROM EMP
WHERE EMPNO=7369;

SELECT *
FROM EMP
WHERE ENAME='ALLEN';

SELECT ename, deptno, sal
FROM EMP
WHERE hiredate='1980/12/17';

SELECT *
FROM EMP
WHERE JOB != 'MANAGER';

SELECT *
FROM EMP
WHERE hiredate>='1981/04/02';

SELECT ENAME, SAL, DEPTNO
FROM EMP
WHERE SAL>=800;

SELECT *
FROM EMP
WHERE deptno>=20;

SELECT *
FROM EMP
WHERE hiredate<'1981/12/09';

SELECT EMPNO, ENAME
FROM EMP
WHERE EMPNO<=7698;

SELECT ENAME, SAL, deptno
FROM EMP
WHERE hiredate>'1981/04/02' and hiredate<'1982/12/09';

SELECT ENAME, JOB, SAL
FROM EMP
WHERE sal>1600 and sal<3000;

SELECT *
FROM EMP
WHERE EMPNO NOT BETWEEN 7654 AND 7782;

SELECT *
FROM EMP
WHERE ENAME BETWEEN 'B' AND 'J';

SELECT *
FROM EMP
WHERE SUBSTR(hiredate,3,2)!=81;

SELECT *
FROM EMP
WHERE JOB in('MANAGER','SALESMAN');

SELECT *
FROM EMP
WHERE deptno != 20 AND deptno != 30;

SELECT EMPNO, ENAME, HIREDATE, DEPTNO
FROM EMP
WHERE ENAME LIKE 'S%';

SELECT *
FROM EMP
WHERE SUBSTR(hiredate,3,2)=81;

SELECT *
FROM EMP
WHERE ENAME LIKE '%S%';

SELECT *
FROM EMP
WHERE ENAME LIKE 'S%T';

SELECT *
FROM EMP
WHERE ENAME LIKE '_A%';

SELECT *
FROM EMP
WHERE COMM IS NULL;

SELECT *
FROM EMP
WHERE COMM IS NOT NULL;

SELECT ENAME, DEPTNO, SAL
FROM EMP
WHERE deptno = 30 AND SAL > 1500;

SELECT EMPNO, ENAME, DEPTNO
FROM EMP
WHERE ENAME LIKE 'K%' OR deptno =30;

SELECT *
FROM EMP
WHERE SAL>1500 AND DEPTNO=30 AND JOB='MANAGER';

SELECT *
FROM EMP
WHERE DEPTNO=30
ORDER BY EMPNO;





-- SQL 복수행 함수
SELECT COUNT(ENAME)
FROM EMP;
-- GROUP BY : 같은 값들을 묶어서 행의 갯수를 맞춰 줌. 
SELECT MAX(SAL), DEPTNO, ENAME
FROM EMP
GROUP BY DEPTNO, ENAME;

SELECT DISTINCT JOB
FROM EMP;

SELECT MAX(SAL), JOB
FROM EMP
GROUP BY JOB;

SELECT SUM(SAL), DEPTNO
FROM EMP
GROUP BY DEPTNO
ORDER BY 1 DESC;

SELECT COUNT(*), JOB
FROM EMP
GROUP BY JOB;

SELECT FLOOR(AVG(SAL)), JOB
FROM EMP
GROUP BY JOB
HAVING JOB != 'MANAGER';

SELECT deptno, AVG(NVL(sal,0))
FROM emp
GROUP BY deptno
HAVING AVG(NVL(sal,0))>2000;

-- 서브쿼리(SELECT 안에 SELECT)
SELECT *
FROM EMP
WHERE SAL = (SELECT MAX(SAL) FROM EMP);

-- ROWNUM : 하드디스크나 메모리로부터 퍼올리는 순서대로 번호를 매겨줌.
SELECT *
FROM GOGAK;

SELECT MAX(POINT)
FROM GOGAK;

SELECT MAX(POINT)
FROM GOGAK
WHERE ROWNUM > 0 AND ROWNUM <9
UNION ALL
SELECT MAX(POINT)
FROM
(SELECT GNO, POINT, ROWNUM "NO" FROM GOGAK)
WHERE NO > 8 AND NO <21;

-- CASE 활용
SELECT *
FROM STUDENT;

SELECT NAME, TEL,
       CASE(SUBSTR(tel, 1, INSTR(tel,')')-1)) WHEN '02' THEN 'SEOUL'
                                              WHEN '031' THEN 'GYEONGGI'
                                              WHEN '051' THEN 'BUSAN'
                                              WHEN '052' THEN 'ULSAN'
                                              WHEN '055' THEN 'GYEONGNAM'
                                                         ELSE 'ETC' 
       END "LOG"
FROM STUDENT
WHERE deptno1 = 201;

--1~8: 1, 9~:2
SELECT MAX(POINT)
FROM
(
    SELECT GNO, GNAME, POINT, NO,
    CASE WHEN NO < 9 THEN 1 ELSE 2 END "G"
    FROM
    (
        SELECT GNO, GNAME, POINT, ROWNUM "NO"
        FROM GOGAK
    )
)
GROUP BY G;

-- 세로연산의 핵심은 그룹을 만드는 것
SELECT MAX(POINT), G
FROM
(
    SELECT POINT, CASE WHEN ROWNUM < 9 THEN 1 ELSE 2 END "G"
    FROM GOGAK
)
GROUP BY G;

SELECT WEEK, MAX(NUM_DAY)
FROM CAL
GROUP BY WEEK
ORDER BY WEEK;


-- 5명씩 끊어서 포인트의 합을 구하시오.
SELECT SUM(POINT), G
FROM
(
SELECT POINT, CASE WHEN ROWNUM <= 5 THEN 1
                   WHEN ROWNUM <= 10 THEN 2
                   WHEN ROWNUM <= 15 THEN 3
                   ELSE 4 
                   END "G"
FROM GOGAK
)
GROUP BY G;

SELECT SUM(POINT), CEIL(ROWNUM/5)
FROM GOGAK
GROUP BY CEIL(ROWNUM/5);

-- 같은 나이의 POINT의 합을 구하시오.
SELECT SUM(POINT),J
FROM 
(
SELECT POINT, SUBSTR(JUMIN,1,2) "J"
FROM GOGAK
)
GROUP BY J;

SELECT SUM(POINT), SUBSTR(JUMIN,1,2) "AGE"
FROM GOGAK
GROUP BY SUBSTR(JUMIN,1,2);

-- 월급 순위 구하기
SELECT ENAME, SAL, ROWNUM "순위"
FROM
(
    SELECT ENAME, SAL
    FROM EMP
    ORDER BY SAL DESC
);



-- GROUP BY ROLLUP : 소계, 총계 구하기
SELECT ENAME, JOB, DEPTNO, TO_CHAR(S,'$99,999')
FROM
(
    SELECT ENAME, JOB, SAL+(DECODE(COMM, NULL, 0, COMM)) "S", DEPTNO
    FROM EMP
    ORDER BY DEPTNO
)
WHERE DEPTNO = 10
UNION ALL
SELECT '소계', NULL, NULL, TO_CHAR(SUM(SAL),'$99,999')
FROM EMP
WHERE DEPTNO = 10
UNION ALL
SELECT ENAME, JOB, DEPTNO, TO_CHAR(S,'$99,999')
FROM
(
    SELECT ENAME, JOB, SAL+(DECODE(COMM, NULL, 0, COMM)) "S", DEPTNO
    FROM EMP
    ORDER BY DEPTNO
)
WHERE DEPTNO = 20
UNION ALL
SELECT '소계', NULL, NULL, TO_CHAR(SUM(SAL),'$99,999')
FROM EMP
WHERE DEPTNO = 20
UNION ALL
SELECT ENAME, JOB, DEPTNO, TO_CHAR(S,'$99,999')
FROM
(
    SELECT ENAME, JOB, SAL+(DECODE(COMM, NULL, 0, COMM)) "S", DEPTNO
    FROM EMP
    ORDER BY DEPTNO
)
WHERE DEPTNO = 30
UNION ALL
SELECT '소계', NULL, NULL, TO_CHAR(SUM(SAL),'$99,999')
FROM EMP
WHERE DEPTNO = 30
UNION ALL
SELECT '총계', NULL, NULL, TO_CHAR(SUM(SAL),'$99,999')
FROM EMP;

SELECT DEPTNO, JOB ,AVG(SAL), COUNT(SAL)  
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY deptno;

SELECT deptno, NULL job, ROUND(AVG(sal),1) avg_sal, COUNT(*) cnt_emp
FROM emp
GROUP BY deptno
UNION ALL
SELECT deptno, job, ROUND(AVG(sal),1) avg_sal, COUNT(*) cnt_emp
FROM emp
GROUP BY deptno, job
UNION ALL
SELECT null deptno, null job, ROUND(AVG(sal),1) avg_sal, COUNT(*) cnt_emp
FROM emp
ORDER BY deptno, job;

SELECT DEPTNO, JOB, ROUND(AVG(SAL),1) AVG_SAL, COUNT(*) CNT_EMP
FROM EMP
GROUP BY ROLLUP (deptno, job);

-- 학생 테이블의 키(HEIGHT)의 평균을 구하시오.
SELECT *
FROM STUDENT;

SELECT AVG(HEIGHT)
FROM STUDENT;
-- 학생 테이블에서 학과(DEPTNO1)별 학생들의 키의 평균을 구하시오. 
SELECT DEPTNO1, AVG(HEIGHT)
FROM STUDENT
GROUP BY DEPTNO1;
-- 학생 테이블에서 학과별 학생들의 키의 평균과 소계값을 구하시오.
SELECT DEPTNO1, ROUND(AVG(HEIGHT),1) "AVG_H" 
FROM STUDENT
GROUP BY ROLLUP (DEPTNO1);
-- 학생 테이블에서 학과와 학년별 학생들의 키의 평균과 소계값을 구하시오.
SELECT DEPTNO1, GRADE, ROUND(AVG(HEIGHT),1) "AVG_H"
FROM STUDENT
GROUP BY ROLLUP (DEPTNO1, GRADE);
-- emp 직업별 급여합계 조회 마지막줄에 총합계 추가해서 표시.
SELECT JOB, SUM(SAL)
FROM EMP
GROUP BY ROLLUP (JOB);

SELECT *
FROM EMP
;
-- PANMAE 테이블에서 날짜별(P_DATE) 상품이(P_CODE) 몇개(P_QTY) 판매되었는지와 소계값을 구하시오.(총계 없이)
SELECT P_DATE, P_CODE, COUNT(P_QTY) "수량"
FROM PANMAE
GROUP BY p_date, ROLLUP (p_code);
-- PANMAE 테이블에서 상품별(P_CODE)로 날짜마다(P_DATE) 얼마의 금액(P_TOTAL)이 판매되었는지와 소계값을 구하시오.
SELECT P_CODE,P_DATE, SUM(P_TOTAL) "금액"
FROM PANMAE
GROUP BY ROLLUP (p_code,p_date);

SELECT JOB, DEPTNO, SUM(SAL), COUNT(*)
FROM EMP
GROUP BY JOB, ROLLUP(DEPTNO); 

SELECT POSITION, SUM(PAY)
FROM PROFESSOR
GROUP BY ROLLUP (POSITION);

SELECT GRADE, DEPTNO1, AVG(HEIGHT)
FROM STUDENT
GROUP BY GRADE, ROLLUP(DEPTNO1); 
--학년별 몸무게의 평균, 전체 몸무게 평균
SELECT GRADE, AVG(WEIGHT)
FROM STUDENT
GROUP BY ROLLUP(GRADE);





-- PIVOP()함수
SELECT WEEK, 
MAX(DECODE(DAY, '일', NUM_DAY)) "일",
MAX(DECODE(DAY, '월', NUM_DAY)) "월",
MAX(DECODE(DAY, '화', NUM_DAY)) "화",
MAX(DECODE(DAY, '수', NUM_DAY)) "수",
MAX(DECODE(DAY, '목', NUM_DAY)) "목",
MAX(DECODE(DAY, '금', NUM_DAY)) "금",
MAX(DECODE(DAY, '토', NUM_DAY)) "토"
FROM CAL
GROUP BY WEEK
ORDER BY WEEK;









