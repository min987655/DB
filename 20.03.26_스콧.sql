--1~8: 1, 9~:2
SELECT MAX(POINT)
FROM
(
    SELECT GNO, GNAME, POINT, NO,
    CASE WHEN NO < 9 THEN 1 ELSE 2 END "G"
    FROM
    (
        SELECT GNO, GNAME, POINT, ROWNUM "NO"
        FROM GOGAK
    )
)
GROUP BY G;

-- 세로연산의 핵심은 그룹을 만드는 것
SELECT MAX(POINT), G
FROM
(
    SELECT POINT, CASE WHEN ROWNUM < 9 THEN 1 ELSE 2 END "G"
    FROM GOGAK
)
GROUP BY G;

SELECT WEEK, MAX(NUM_DAY)
FROM CAL
GROUP BY WEEK
ORDER BY WEEK;


-- 5명씩 끊어서 포인트의 합을 구하시오.
SELECT SUM(POINT), G
FROM
(
SELECT POINT, CASE WHEN ROWNUM <= 5 THEN 1
                   WHEN ROWNUM <= 10 THEN 2
                   WHEN ROWNUM <= 15 THEN 3
                   ELSE 4 
                   END "G"
FROM GOGAK
)
GROUP BY G;

SELECT SUM(POINT), CEIL(ROWNUM/5)
FROM GOGAK
GROUP BY CEIL(ROWNUM/5);

-- 같은 나이의 POINT의 합을 구하시오.
SELECT SUM(POINT),J
FROM 
(
SELECT POINT, SUBSTR(JUMIN,1,2) "J"
FROM GOGAK
)
GROUP BY J;

SELECT SUM(POINT), SUBSTR(JUMIN,1,2) "AGE"
FROM GOGAK
GROUP BY SUBSTR(JUMIN,1,2);

-- 월급 순위 구하기
SELECT ENAME, SAL, ROWNUM "순위"
FROM
(
    SELECT ENAME, SAL
    FROM EMP
    ORDER BY SAL DESC
);



-- GROUP BY ROLLUP : 소계, 총계 구하기
SELECT ENAME, JOB, DEPTNO, TO_CHAR(S,'$99,999')
FROM
(
    SELECT ENAME, JOB, SAL+(DECODE(COMM, NULL, 0, COMM)) "S", DEPTNO
    FROM EMP
    ORDER BY DEPTNO
)
WHERE DEPTNO = 10
UNION ALL
SELECT '소계', NULL, NULL, TO_CHAR(SUM(SAL),'$99,999')
FROM EMP
WHERE DEPTNO = 10
UNION ALL
SELECT ENAME, JOB, DEPTNO, TO_CHAR(S,'$99,999')
FROM
(
    SELECT ENAME, JOB, SAL+(DECODE(COMM, NULL, 0, COMM)) "S", DEPTNO
    FROM EMP
    ORDER BY DEPTNO
)
WHERE DEPTNO = 20
UNION ALL
SELECT '소계', NULL, NULL, TO_CHAR(SUM(SAL),'$99,999')
FROM EMP
WHERE DEPTNO = 20
UNION ALL
SELECT ENAME, JOB, DEPTNO, TO_CHAR(S,'$99,999')
FROM
(
    SELECT ENAME, JOB, SAL+(DECODE(COMM, NULL, 0, COMM)) "S", DEPTNO
    FROM EMP
    ORDER BY DEPTNO
)
WHERE DEPTNO = 30
UNION ALL
SELECT '소계', NULL, NULL, TO_CHAR(SUM(SAL),'$99,999')
FROM EMP
WHERE DEPTNO = 30
UNION ALL
SELECT '총계', NULL, NULL, TO_CHAR(SUM(SAL),'$99,999')
FROM EMP;

SELECT DEPTNO, JOB ,AVG(SAL), COUNT(SAL)  
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY deptno;

SELECT deptno, NULL job, ROUND(AVG(sal),1) avg_sal, COUNT(*) cnt_emp
FROM emp
GROUP BY deptno
UNION ALL
SELECT deptno, job, ROUND(AVG(sal),1) avg_sal, COUNT(*) cnt_emp
FROM emp
GROUP BY deptno, job
UNION ALL
SELECT null deptno, null job, ROUND(AVG(sal),1) avg_sal, COUNT(*) cnt_emp
FROM emp
ORDER BY deptno, job;

SELECT DEPTNO, JOB, ROUND(AVG(SAL),1) AVG_SAL, COUNT(*) CNT_EMP
FROM EMP
GROUP BY ROLLUP (deptno, job);

-- 학생 테이블의 키(HEIGHT)의 평균을 구하시오.
SELECT *
FROM STUDENT;

SELECT AVG(HEIGHT)
FROM STUDENT;
-- 학생 테이블에서 학과(DEPTNO1)별 학생들의 키의 평균을 구하시오. 
SELECT DEPTNO1, AVG(HEIGHT)
FROM STUDENT
GROUP BY DEPTNO1;
-- 학생 테이블에서 학과별 학생들의 키의 평균과 소계값을 구하시오.
SELECT DEPTNO1, ROUND(AVG(HEIGHT),1) "AVG_H" 
FROM STUDENT
GROUP BY ROLLUP (DEPTNO1);
-- 학생 테이블에서 학과와 학년별 학생들의 키의 평균과 소계값을 구하시오.
SELECT DEPTNO1, GRADE, ROUND(AVG(HEIGHT),1) "AVG_H"
FROM STUDENT
GROUP BY ROLLUP (DEPTNO1, GRADE);
-- emp 직업별 급여합계 조회 마지막줄에 총합계 추가해서 표시.
SELECT JOB, SUM(SAL)
FROM EMP
GROUP BY ROLLUP (JOB);

SELECT *
FROM EMP
;
-- PANMAE 테이블에서 날짜별(P_DATE) 상품이(P_CODE) 몇개(P_QTY) 판매되었는지와 소계값을 구하시오.(총계 없이)
SELECT P_DATE, P_CODE, COUNT(P_QTY) "수량"
FROM PANMAE
GROUP BY p_date, ROLLUP (p_code);
-- PANMAE 테이블에서 상품별(P_CODE)로 날짜마다(P_DATE) 얼마의 금액(P_TOTAL)이 판매되었는지와 소계값을 구하시오.
SELECT P_CODE,P_DATE, SUM(P_TOTAL) "금액"
FROM PANMAE
GROUP BY ROLLUP (p_code,p_date);

SELECT JOB, DEPTNO, SUM(SAL), COUNT(*)
FROM EMP
GROUP BY JOB, ROLLUP(DEPTNO); 

SELECT POSITION, SUM(PAY)
FROM PROFESSOR
GROUP BY ROLLUP (POSITION);

SELECT GRADE, DEPTNO1, AVG(HEIGHT)
FROM STUDENT
GROUP BY GRADE, ROLLUP(DEPTNO1); 
--학년별 몸무게의 평균, 전체 몸무게 평균
SELECT GRADE, AVG(WEIGHT)
FROM STUDENT
GROUP BY ROLLUP(GRADE);





-- PIVOP()함수
SELECT WEEK, 
MAX(DECODE(DAY, '일', NUM_DAY)) "일",
MAX(DECODE(DAY, '월', NUM_DAY)) "월",
MAX(DECODE(DAY, '화', NUM_DAY)) "화",
MAX(DECODE(DAY, '수', NUM_DAY)) "수",
MAX(DECODE(DAY, '목', NUM_DAY)) "목",
MAX(DECODE(DAY, '금', NUM_DAY)) "금",
MAX(DECODE(DAY, '토', NUM_DAY)) "토"
FROM CAL
GROUP BY WEEK
ORDER BY WEEK;

SELECT DEPTNO, 
COUNT(DECODE(JOB, 'CLERK', 0)) "CLERK",
COUNT(DECODE(JOB, 'MANAGER', 0)) "MANAGER",
COUNT(DECODE(JOB, 'PRESIDENT', 0)) "PRESIDENT",
COUNT(DECODE(JOB, 'ANALYST', 0)) "ANALYST",
COUNT(DECODE(JOB, 'SALESMAN', 0)) "SALESMAN"
FROM EMP
GROUP BY DEPTNO 
ORDER BY deptno;

SELECT DEPTNO, JOB, COUNT(*)
FROM EMP
GROUP BY DEPTNO, job
ORDER BY deptno;

SELECT 
FLOOR(AVG(DECODE(POSITION, '정교수',PAY))) "정교수",
FLOOR(AVG(DECODE(POSITION, '조교수',PAY))) "조교수",
FLOOR(AVG(DECODE(POSITION, '전임강사',PAY))) "전임강사"
FROM PROFESSOR;
-- EMP_TYPE별, DEPTNO별 PAY의 합
SELECT EMP_TYPE,
(SUM(DECODE(DEPTNO, '1008', PAY))) "1008",
(SUM(DECODE(DEPTNO, '1009', PAY))) "1009",
(SUM(DECODE(DEPTNO, '1010', PAY))) "1010",
(SUM(DECODE(DEPTNO, '1011', PAY))) "1011"
FROM EMP2
where EMP_TYPE='계약직'
GROUP BY EMP_TYPE;




